name: Deploy Service Registry

on:
  push:
    branches:
      - main
    paths:
      - 'Microservices/service-registry/**'
      - '.github/workflows/deploy-service-registry.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure service folder exists on VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "mkdir -p /opt/scholarai/Microservices/service-registry"

      - name: Copy compose + source to VM
        run: |
          scp -o StrictHostKeyChecking=no Microservices/service-registry/docker-compose.prod.yml \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/opt/scholarai/Microservices/service-registry/docker-compose.prod.yml
          scp -o StrictHostKeyChecking=no -r Microservices/service-registry/* \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/opt/scholarai/Microservices/service-registry/

      - name: Deploy Service Registry
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            echo "üöÄ Starting Service Registry deployment..."
            cd /opt/scholarai/Microservices/service-registry

            echo "üßπ Cleaning up old containers/images..."
            docker rm -f scholar-service-registry || true
            docker image prune -f --filter "label=service=service-registry" || true

            echo "üî® Building Service Registry..."
            docker compose -f docker-compose.prod.yml build service-registry

            echo "üì¶ Starting Service Registry..."
            docker compose -f docker-compose.prod.yml up -d service-registry

            echo "‚è≥ Waiting for Service Registry health..."
            for i in {1..20}; do
              STATUS=$(docker inspect --format='{{json .State.Health.Status}}' scholar-service-registry 2>/dev/null | tr -d '"')
              if [ "$STATUS" = "healthy" ]; then
                echo "‚úÖ Service Registry is healthy!"
                echo "üåê Access it at: http://${{ secrets.VM_HOST }}:8761"
                break
              else
                echo "Still waiting... ($i/20)"
                sleep 10
              fi
            done

            echo "üìä Current Service Registry status:"
            docker ps --filter "name=scholar-service-registry"
          EOF
