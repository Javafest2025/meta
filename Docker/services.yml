services:
  user-postgres:
    image: 'postgres:17-alpine'
    container_name: user-db
    restart: always
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: userDB
    ports:
      - "${USER_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_DB_USER} -d userDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholarai-network

  notification-postgres:
    image: 'postgres:17-alpine'
    container_name: notification-db
    restart: always
    environment:
      POSTGRES_USER: ${NOTIFICATION_DB_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      POSTGRES_DB: notificationDB
    ports:
        - "${NOTIFICATION_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NOTIFICATION_DB_USER} -d notificationDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholarai-network      

  rabbitmq:
    image: 'rabbitmq:4.1.0-management-alpine'
    container_name: user-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${USER_RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${USER_RABBITMQ_PASSWORD}
    ports:
      - '${USER_RABBITMQ_AMQP_PORT}:5672'
      - '${USER_RABBITMQ_MANAGEMENT_PORT}:15672'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      - scholarai-network

  redis:
    image: 'redis:8.0.1-alpine'
    container_name: user-redis
    restart: always
    command: ["redis-server", "--requirepass", "${USER_REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${USER_REDIS_PASSWORD}
    ports:
      - "${USER_REDIS_PORT}:6379"
    volumes:
      - user-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${USER_REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholarai-network

volumes:
  user-redis-data:      


networks:
  scholarai-network:
    driver: bridge
